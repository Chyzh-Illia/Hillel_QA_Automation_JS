class User {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }
  getInfo() {
    return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${this.name}, Email: ${this.email}`;
  }
}

const userGetInfo = new User("John", "temp@gmail.com");
console.log(userGetInfo.getInfo());

class Product {
  constructor(title, price, quantity) {
    this.title = title;
    this.price = price;
    this.quantity = quantity;
  }
  totalPrice() {
    return this.title + "Price: " + this.price * this.quantity;
  }
}

const getProduct = new Product("Some items -> ", 20, 3);
console.log(getProduct.totalPrice());

class Animal {
  constructor(name) {
    this.name = name;
  }
  makeSound() {
    return `${this.name} –∏–∑–¥–∞—ë—Ç –∑–≤—É–∫`;
  }
}

class Cat extends Animal {
  constructor(name) {
    super(name);
  }
  makeSound() {
    return `${this.name}: –ú—è—É`;
  }
}

const soundAnimal = new Animal("–ó–≤–µ—Ä—å");
const soundCat = new Cat("–ö–æ—à–∫–∞");

console.log(soundAnimal.makeSound());
console.log(soundCat.makeSound());

class Rectangle {
    constructor(width, height) {
        this.width = width;
        this.height = height;
    }

    getArea() {
        return this.width * this.height;
    }

    getPerimeter() {
        return 2 * (this.width + this.height);
    }
}

const rect1 = new Rectangle(10, 30);
const rect2 = new Rectangle(32, 21);

console.log(rect1.getArea());
console.log(rect2.getPerimeter());

class Vehicle {
    constructor(type, wheels) {
        this.type = type;
        this.wheels = wheels;
    }

    info() {
        return `–¢–∏–ø: ${this.type}, –∫–æ–ª—ë—Å: ${this.wheels}`;
    }
}

class Car extends Vehicle {
    constructor(brand, wheels) {
        super(wheels);
        this.brand = brand;
        this.wheels = wheels
    }

    info() {
        return `–¢–∏–ø: –∞–≤—Ç–æ–º–æ–±–∏–ª—å ${this.brand}, –∫–æ–ª—ë—Å: ${this.wheels}`;
    }
}

const getInfoVehicle = new Vehicle("–ê–≤—Ç–æ", 4);
const getInfoCar = new Car("Renault", 8);

console.log(getInfoCar.info());
console.log(getInfoVehicle.info());
// üìå –£—Ä–æ–≤–µ–Ω—å —Å super():
// –ö–ª–∞—Å—Å Vehicle:

// type, wheels

// –º–µ—Ç–æ–¥ info() ‚Äî "–¢–∏–ø: <type>, –∫–æ–ª—ë—Å: <wheels>"

// –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Car, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—à–∏—Ä—è–µ—Ç Vehicle, –¥–æ–±–∞–≤–ª—è–µ—Ç brand, –∏ info() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
// "–¢–∏–ø: –∞–≤—Ç–æ–º–æ–±–∏–ª—å <brand>, –∫–æ–ª—ë—Å: <wheels>"